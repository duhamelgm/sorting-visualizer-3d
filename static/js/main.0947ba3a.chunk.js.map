{"version":3,"sources":["actions/sort.actions.js","utils/sort.js","utils/animator.js","actions/cubes.actions.js","utils/cubes.js","utils/map.js","components/HeaderAlgorithmSelector.js","components/Header.js","components/MeshCube.js","components/Camera.js","components/Controls.js","components/Scene.js","App.js","serviceWorker.js","reducers/cubes.reducer.js","reducers/sort.reducer.js","reducers/main.reducer.js","configureStore.js","index.js"],"names":["setAnimator","animator","type","payload","setSelectedAlgorithm","index","resetAnimator","dispatch","getState","state","initialCubes","cubes","sort","stop","setCubes","defaultComparator","a","b","height","quickSort","originalArray","array","_","cloneDeep","animation","swap","leftIndex","rightIndex","temp","newCubes","reduce","obj","el","id","order","push","animations","time","partition","left","right","pivot","Math","floor","i","j","editCube","color","recursiveSort","length","bubbleSort","comparator","n","Animator","frames","this","playing","playFrame","setTimeout","cube","generateCubes","amount","Array","value","istart","ostart","uuidv4","random","position","x","y","z","getRandomCubes","amountX","amountY","useStyles","makeStyles","theme","root","margin","spacing","width","maxWidth","backgroundColor","button","SimpleListMenu","classes","React","useState","anchorEl","setAnchorEl","algorithms","useSelector","algorithmSelected","useDispatch","className","Button","aria-haspopup","aria-controls","aria-label","onClick","event","currentTarget","endIcon","Menu","keepMounted","open","Boolean","onClose","map","option","MenuItem","key","selected","handleMenuItemClick","flexGrow","menuButton","marginRight","title","display","breakpoints","up","inputContainer","borderRadius","shape","fade","palette","common","white","marginLeft","inputRoot","inputInput","padding","transition","transitions","create","selectInput","Header","onSortCubes","useCallback","algorithm","Object","values","sortF","play","onChangeAmount","e","parseInt","target","setAmountCubes","name","onReset","onStop","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","onChange","input","style","connect","cubeId","cubeExist","cubePosition","useSpring","pos","geometry","mesh","boxBufferGeometry","attach","args","meshLambertMaterial","Camera","props","ref","useRef","useThree","setDefaultCamera","scene","useEffect","current","useFrame","updateMatrixWorld","set","lookAt","extend","OrbitControls","Controls","controlsRef","camera","gl","update","domElement","enableRotate","enablePan","maxDistance","minDistance","minPolarAngle","PI","maxPolarAngle","rotateSpeed","Consumer","store","intensity","angle","penumbra","castShadow","enableDamping","dampingFactor","App","window","location","hostname","match","initialState","combineReducers","action","forEach","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0947ba3a.chunk.js","sourcesContent":["import { setCubes } from \"./cubes.actions\";\r\n\r\nexport const setAnimator = animator => ({\r\n  type: \"SORT_SET_ANIMATOR\",\r\n  payload: { animator }\r\n});\r\n\r\nexport const setSelectedAlgorithm = index => ({\r\n  type: \"SORT_SET_SELECTED_ALGORITHM\",\r\n  payload: { index }\r\n});\r\n\r\nexport const resetAnimator = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const initialCubes = state.cubes.initialCubes;\r\n  const animator = state.sort.animator;\r\n\r\n  if (animator) {\r\n    animator.stop();\r\n    dispatch(setAnimator(null));\r\n    dispatch(setCubes(initialCubes));\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport { setCubes, editCube } from \"../actions/cubes.actions\";\r\n\r\nconst defaultComparator = (a, b) => (a.height > b.height ? -1 : 1);\r\n\r\nexport const quickSort = (\r\n  originalArray,\r\n  dispatch,\r\n  comparator = defaultComparator\r\n) => {\r\n  // immutable version\r\n  const array = _.cloneDeep(originalArray);\r\n  const animation = [];\r\n\r\n  const swap = (leftIndex, rightIndex) => {\r\n    var temp = array[leftIndex];\r\n    array[leftIndex] = array[rightIndex];\r\n    array[rightIndex] = temp;\r\n\r\n    const newCubes = array.reduce((obj, el, index) => {\r\n      obj[el.id] = {\r\n        ...el,\r\n        order: index\r\n      };\r\n\r\n      return obj;\r\n    }, {});\r\n\r\n    animation.push({\r\n      animations: () => {\r\n        dispatch(setCubes({ ...newCubes }));\r\n      },\r\n      time: 100\r\n    });\r\n  };\r\n  const partition = (left, right) => {\r\n    var pivot = array[Math.floor((right + left) / 2)], //middle element\r\n      i = left, //left pointer\r\n      j = right; //right pointer\r\n\r\n    animation.push({\r\n      animations: () => {\r\n        dispatch(\r\n          editCube(pivot.id, {\r\n            color: \"red\"\r\n          })\r\n        );\r\n      },\r\n      time: 300\r\n    });\r\n\r\n    while (i <= j) {\r\n      while (array[i].height > pivot.height) {\r\n        i++;\r\n      }\r\n      while (array[j].height < pivot.height) {\r\n        j--;\r\n      }\r\n      if (i <= j) {\r\n        swap(i, j); //sawpping two elements\r\n        i++;\r\n        j--;\r\n      }\r\n    }\r\n    return i;\r\n  };\r\n\r\n  const recursiveSort = (left, right) => {\r\n    if (array.length > 1) {\r\n      const index = partition(left, right); //index returned from partition\r\n\r\n      if (left < index - 1) {\r\n        //more elements on the left side of the pivot\r\n        recursiveSort(left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        //more elements on the right side of the pivot\r\n        recursiveSort(index, right);\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  // Sort the entire array.\r\n  recursiveSort(0, array.length - 1);\r\n  return [array, animation];\r\n};\r\n\r\nexport const bubbleSort = (\r\n  originalArray,\r\n  dispatch,\r\n  comparator = defaultComparator\r\n) => {\r\n  // immutable version\r\n  const array = _.cloneDeep(originalArray);\r\n  const n = array.length;\r\n  const animation = [];\r\n\r\n  const swap = (leftIndex, rightIndex) => {\r\n    var temp = array[leftIndex];\r\n    array[leftIndex] = array[rightIndex];\r\n    array[rightIndex] = temp;\r\n\r\n    const newCubes = array.reduce((obj, el, index) => {\r\n      obj[el.id] = {\r\n        ...el,\r\n        order: index\r\n      };\r\n\r\n      return obj;\r\n    }, {});\r\n\r\n    animation.push({\r\n      animations: () => {\r\n        dispatch(setCubes({ ...newCubes }));\r\n      },\r\n      time: 100\r\n    });\r\n  };\r\n\r\n  // A function to implement bubble sort\r\n  const bubbleSort = () => {\r\n    for (let i = 0; i < n - 1; i++) {\r\n      for (let j = 0; j < n - i - 1; j++) {\r\n        if (comparator(array[j], array[j + 1]) === 1) swap(j, j + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  bubbleSort();\r\n  return [array, animation];\r\n};\r\n","export class Animator {\r\n  constructor(frames) {\r\n    this.frames = frames;\r\n    this.playing = false;\r\n  }\r\n\r\n  play() {\r\n    this.playing = true;\r\n    this.playFrame(0);\r\n  }\r\n\r\n  playFrame(index) {\r\n    if (!this.playing || this.frames.length - 1 < index) {\r\n      this.stop();\r\n      return;\r\n    }\r\n\r\n    this.frames[index].animations();\r\n\r\n    setTimeout(() => {\r\n      index++;\r\n      this.playFrame(index);\r\n    }, this.frames[index].time);\r\n  }\r\n\r\n  stop() {\r\n    this.playing = false;\r\n  }\r\n}\r\n","import { resetAnimator, setAnimator } from \"./sort.actions\";\r\nimport { getRandomCubes } from \"../utils/cubes\";\r\nimport { quickSort, bubbleSort } from \"../utils/sort\";\r\nimport { Animator } from \"../utils/animator\";\r\n\r\nexport const setCubes = cubes => ({\r\n  type: \"CUBES_SET_CUBES\",\r\n  payload: { cubes }\r\n});\r\nexport const updateCubes = cubes => ({\r\n  type: \"CUBES_UPDATE_CUBES\",\r\n  payload: { cubes }\r\n});\r\n\r\nexport const editCube = (id, cube) => ({\r\n  type: \"CUBES_EDIT_CUBE\",\r\n  payload: { id, cube }\r\n});\r\n\r\nexport const setAmountCubes = amount => dispatch => {\r\n  dispatch({\r\n    type: \"CUBES_SET_AMOUNT\",\r\n    payload: { amount }\r\n  });\r\n\r\n  dispatch(generateCubes(amount));\r\n};\r\n\r\nexport const generateCubes = amount => (dispatch, getState) => {\r\n  const state = getState();\r\n  dispatch(resetAnimator());\r\n\r\n  if (!amount) {\r\n    amount = state.cubes.amount;\r\n  } else {\r\n    amount = amount.amountX * amount.amountY;\r\n  }\r\n\r\n  const cubes = getRandomCubes(amount);\r\n\r\n  dispatch({\r\n    type: \"CUBES_SET_INITIAL_CUBES\",\r\n    payload: {\r\n      initialCubes: { ...cubes }\r\n    }\r\n  });\r\n  dispatch(setCubes(cubes));\r\n};\r\n\r\nexport const sortCubes = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const algorithm = state.sort.algorithms[state.sort.algorithmSelected];\r\n  const cubes = Object.values(state.cubes.cubes);\r\n\r\n  let sortF = quickSort;\r\n\r\n  if (algorithm === \"Quicksort\") {\r\n    sortF = quickSort;\r\n  } else if (algorithm === \"Bubble\") {\r\n    sortF = bubbleSort;\r\n  }\r\n\r\n  let [result, animation] = sortF(cubes, dispatch);\r\n\r\n  const animator = new Animator(animation);\r\n  animator.play();\r\n\r\n  dispatch(setAnimator(animator));\r\n};\r\n","import { map } from \"./map\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nexport const getRandomCubes = amount => {\r\n  return [...new Array(amount)].reduce((obj, _, index) => {\r\n    const id = uuidv4();\r\n    const height = Math.floor(map(Math.random(), 0, 1, 20, 150));\r\n\r\n    obj[id] = {\r\n      id,\r\n      order: index,\r\n      color: \"green\",\r\n      height: height,\r\n      position: {\r\n        x: 1,\r\n        y: height / 40,\r\n        z: 1\r\n      }\r\n    };\r\n\r\n    return obj;\r\n  }, {});\r\n};\r\n","export const map = (value, istart, istop, ostart, ostop) =>\r\n  ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedAlgorithm } from \"../actions/sort.actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(0, 4),\r\n    width: \"100%\",\r\n    maxWidth: 140,\r\n    backgroundColor: \"inherit\"\r\n  },\r\n  button: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function SimpleListMenu() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const algorithms = useSelector(state => state.sort.algorithms);\r\n  const algorithmSelected = useSelector(state => state.sort.algorithmSelected);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n\r\n    dispatch(setSelectedAlgorithm(index));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        className={classes.button}\r\n        aria-haspopup=\"true\"\r\n        aria-controls=\"lock-menu\"\r\n        aria-label=\"when device is locked\"\r\n        onClick={handleClickListItem}\r\n        color=\"inherit\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n      >\r\n        {algorithms[algorithmSelected]}\r\n      </Button>\r\n\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {algorithms.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === algorithmSelected}\r\n            onClick={event => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setAmountCubes,\r\n  sortCubes,\r\n  generateCubes\r\n} from \"../actions/cubes.actions\";\r\nimport { resetAnimator } from \"../actions/sort.actions\";\r\n\r\nimport HeaderAlgorithmSelector from \"./HeaderAlgorithmSelector\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  inputContainer: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 1),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: 150\r\n  },\r\n  selectInput: {\r\n    padding: theme.spacing(1, 1, 1, 1),\r\n    color: theme.palette.common.white,\r\n    width: 150\r\n  },\r\n  button: {\r\n    marginLeft: \"auto\"\r\n  }\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const amount = useSelector(state => ({\r\n    amountX: state.cubes.amountX,\r\n    amountY: state.cubes.amountY\r\n  }));\r\n  const animator = useSelector(state => state.sort.animator);\r\n\r\n  const onSortCubes = useCallback(() => {\r\n    dispatch(sortCubes());\r\n  }, []);\r\n\r\n  const onChangeAmount = useCallback(\r\n    e => {\r\n      let value = parseInt(e.target.value);\r\n\r\n      if (value < 1 || !value) {\r\n        value = 1;\r\n      } else if (value > 100) {\r\n        value = 100;\r\n      }\r\n\r\n      dispatch(\r\n        setAmountCubes({\r\n          ...amount,\r\n          [e.target.name]: value\r\n        })\r\n      );\r\n    },\r\n    [amount]\r\n  );\r\n\r\n  const onReset = useCallback(() => {\r\n    dispatch(generateCubes());\r\n  }, []);\r\n\r\n  const onStop = useCallback(() => {\r\n    dispatch(resetAnimator());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Sorting 3D Visualizer\r\n          </Typography>\r\n\r\n          <HeaderAlgorithmSelector />\r\n\r\n          <div className={classes.inputContainer}>\r\n            <InputBase\r\n              placeholder=\"20\"\r\n              type=\"number\"\r\n              name=\"amountX\"\r\n              value={amount.amountX}\r\n              onChange={onChangeAmount}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputContainer}>\r\n            <InputBase\r\n              placeholder=\"20\"\r\n              type=\"number\"\r\n              name=\"amountY\"\r\n              value={amount.amountY}\r\n              onChange={onChangeAmount}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n            />\r\n          </div>\r\n          <Button color=\"inherit\" onClick={onReset} style={{ marginLeft: 10 }}>\r\n            Reset\r\n          </Button>\r\n          {animator && animator.playing && (\r\n            <Button color=\"inherit\" onClick={onStop} className={classes.button}>\r\n              Stop\r\n            </Button>\r\n          )}\r\n          {(!animator || !animator.playing) && (\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={onSortCubes}\r\n              className={classes.button}\r\n            >\r\n              Sort\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useSpring, animated } from \"react-spring/three\";\r\n\r\nconst MeshCube = ({ cubeId, cubes, amount, amountX, amountY }) => {\r\n  const cube = cubes[cubeId];\r\n\r\n  const cubeExist = cube && Object.values(cube).length;\r\n\r\n  const cubePosition = cubeExist\r\n    ? [\r\n        cube.position.x +\r\n          (Math.floor(cube.order / amountY) * 1.8 - (amountX / 2) * 1.8),\r\n        cube.position.y - 150 / 40,\r\n        cube.position.z + ((cube.order % amountY) * 1.8 - (amountY / 2) * 1.8)\r\n      ]\r\n    : [0, 0, 0];\r\n\r\n  const { color, pos, geometry } = useSpring({\r\n    color: cubeExist ? cube.color : \"green\",\r\n    pos: cubeExist ? cubePosition : [0, 0, 0],\r\n    geometry: cubeExist ? [1, cube.height / 20, 1] : [1, 2, 1]\r\n  });\r\n\r\n  return (\r\n    <animated.mesh position={pos}>\r\n      <animated.boxBufferGeometry attach=\"geometry\" args={geometry} />\r\n      <animated.meshLambertMaterial attach=\"material\" color={color} />\r\n    </animated.mesh>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cubes: state.cubes.cubes,\r\n  amount: state.cubes.amount,\r\n  amountX: state.cubes.amountX,\r\n  amountY: state.cubes.amountY\r\n});\r\n\r\nexport default connect(mapStateToProps)(MeshCube);\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Camera = props => {\r\n  const ref = useRef();\r\n  const amount = useSelector(state => state.cubes.amount);\r\n\r\n  const { setDefaultCamera, scene } = useThree();\r\n  // Make the camera known to the system\r\n  useEffect(() => setDefaultCamera(ref.current), []);\r\n  // Update it every frame\r\n  useFrame(() => ref.current.updateMatrixWorld());\r\n\r\n  useEffect(() => {\r\n    //ref.current.scale.x = 0.002 * amount;\r\n    //ref.current.scale.y = 0.002 * amount;\r\n\r\n    ref.current.position.set(20, 20, 20); // all components equal\r\n    ref.current.lookAt(scene.position); // or the origin\r\n  }, []);\r\n\r\n  return <perspectiveCamera ref={ref} {...props} />;\r\n};\r\n\r\nexport default Camera;\r\n","import React, { useRef } from \"react\";\r\nimport { extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nextend({ OrbitControls });\r\n\r\nfunction Controls() {\r\n  const controlsRef = useRef();\r\n  const { camera, gl } = useThree();\r\n\r\n  useFrame(() => controlsRef.current && controlsRef.current.update());\r\n\r\n  return (\r\n    <orbitControls\r\n      ref={controlsRef}\r\n      args={[camera, gl.domElement]}\r\n      enableRotate\r\n      enablePan={false}\r\n      maxDistance={200}\r\n      minDistance={5}\r\n      minPolarAngle={Math.PI / 6}\r\n      maxPolarAngle={Math.PI / 2}\r\n      rotateSpeed={0.8}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Provider, connect, ReactReduxContext } from \"react-redux\";\r\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\r\n\r\nimport * as THREE from \"three\";\r\n\r\nimport MeshCube from \"./MeshCube\";\r\nimport Camera from \"./Camera\";\r\nimport Controls from \"./Controls\";\r\n\r\nconst Scene = ({ amount, cubes, initialCubes }) => {\r\n  return (\r\n    <ReactReduxContext.Consumer>\r\n      {({ store }) => {\r\n        return (\r\n          <Canvas style={{ width: \"100vw\", height: \"calc(100vh - 64px)\" }}>\r\n            <Provider store={store}>\r\n              <ambientLight intensity={0.5} />\r\n              <Camera>\r\n                <spotLight\r\n                  intensity={0.5}\r\n                  position={[0, 0, 0]}\r\n                  angle={0.8}\r\n                  penumbra={1}\r\n                  castShadow\r\n                />\r\n              </Camera>\r\n              <Controls enableDamping rotateSpeed={0.3} dampingFactor={0.1} />\r\n              {Object.values(initialCubes).map((cube, index) => {\r\n                if (!cubes[cube.id]) return \"\";\r\n\r\n                return <MeshCube key={index + cube.id} cubeId={cube.id} />;\r\n              })}\r\n            </Provider>\r\n          </Canvas>\r\n        );\r\n      }}\r\n    </ReactReduxContext.Consumer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  amount: state.cubes.amount,\r\n  cubes: state.cubes.cubes,\r\n  initialCubes: state.cubes.initialCubes\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scene);\r\n","import React, { useEffect, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport Scene from \"./components/Scene\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { generateCubes } from \"./actions/cubes.actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(generateCubes());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Scene />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  amount: 16,\r\n  amountX: 4,\r\n  amountY: 4,\r\n  cubes: {},\r\n  initialCubes: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CUBES_SET_AMOUNT\": {\r\n      const {\r\n        amount: { amountX, amountY }\r\n      } = action.payload;\r\n\r\n      return { ...state, amountX, amountY, amount: amountX * amountY };\r\n    }\r\n    case \"CUBES_SET_INITIAL_CUBES\": {\r\n      const { initialCubes } = action.payload;\r\n\r\n      return { ...state, initialCubes };\r\n    }\r\n    case \"CUBES_SET_CUBES\": {\r\n      const { cubes } = action.payload;\r\n\r\n      return { ...state, cubes };\r\n    }\r\n    case \"CUBES_UPDATE_CUBES\": {\r\n      const { cubes } = action.payload;\r\n      const newCubes = state.cubes;\r\n\r\n      Object.values(cubes).forEach(cube => {\r\n        newCubes[cube.id] = {\r\n          ...newCubes[cube.id],\r\n          ...cube\r\n        };\r\n      });\r\n\r\n      return { ...state, cubes: newCubes };\r\n    }\r\n    case \"CUBES_EDIT_CUBE\": {\r\n      const { cube, id } = action.payload;\r\n      const cubes = state.cubes;\r\n\r\n      if (!cubes[id]) return state;\r\n\r\n      cubes[id] = { ...cubes[id], ...cube };\r\n\r\n      return {\r\n        ...state,\r\n        cubes: { ...cubes }\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n","const initialState = {\r\n  algorithms: [\"Quicksort\", \"Bubble\"],\r\n  algorithmSelected: 0,\r\n  animator: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SORT_SET_SELECTED_ALGORITHM\": {\r\n      const { index } = action.payload;\r\n\r\n      return { ...state, algorithmSelected: index };\r\n    }\r\n    case \"SORT_SET_ANIMATOR\": {\r\n      const { animator } = action.payload;\r\n\r\n      return { ...state, animator };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n","import cubes from \"./cubes.reducer\";\r\nimport sort from \"./sort.reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  cubes,\r\n  sort\r\n});\r\n","import React from \"react\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducers/main.reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    reducer,\r\n    /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)) // thunk required for async action creators\r\n  );\r\n\r\n  if (process.env.NODE_ENV === \"development\" && module.hot) {\r\n    module.hot.accept(\"./reducers/main.reducer\", () =>\r\n      store.replaceReducer(reducer)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}